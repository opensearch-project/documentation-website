openapi: 3.1.0
info:
  title: OpenSearch API Specification
  version: 1.0.0
  x-api-version: 2.16.0
paths:
  /_cat/health:
    get:
      operationId: cat_health.0
      x-operation-group: cat.health
      parameters:
        - $ref: '#/components/parameters/_global___query.pretty'
        - $ref: '#/components/parameters/_global___query.human'
        - $ref: '#/components/parameters/cat.health___query.expand_wildcard'
  /_search:
    get:
      operationId: search.0
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search___query.analyze_wildcard'
        - $ref: '#/components/parameters/search___query.analyzer'
    post:
      operationId: search.1
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
          url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
          - $ref: '#/components/parameters/search___query.analyze_wildcard'
          - $ref: '#/components/parameters/search___query.analyzer'
          - $ref: '#/components/parameters/search___query.expand_wildcards'
  /{index}/_search:
    get:
      operationId: search.2
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search___path.index'
        - $ref: '#/components/parameters/search___query.analyze_wildcard'
        - $ref: '#/components/parameters/search___query.analyzer'
        - $ref: '#/components/parameters/search___query.expand_wildcards'
    post:
      operationId: search.3
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search___path.index'
        - $ref: '#/components/parameters/search___query.analyze_wildcard'
        - $ref: '#/components/parameters/search___query.analyzer'
        - $ref: '#/components/parameters/search___query.expand_wildcards'
  /_settings:
    put:
      operationId: indices.put_settings.0
      x-operation-group: indices.put_settings
      x-version-added: '1.0'
      description: Updates the index settings.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/index-apis/update-settings/
      requestBody:
        $ref: '#/components/requestBodies/indices.put_settings'
      responses:
        '200':
          $ref: '#/components/responses/indices.put_settings___200'

  /_bulk:
    post:
      operationId: bulk.0
      x-operation-group: bulk
      x-version-added: '1.0'
      description: Allows to perform multiple index/update/delete operations in a single request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      requestBody:
        $ref: '#/components/requestBodies/bulk'
components:

  parameters:

    _global___query.pretty:
      name: pretty
      in: query
      description: Whether to pretty format the returned JSON response.
      schema:
        type: boolean
      default: false
      x-global: true

    _global___query.human:
      name: human
      in: query
      description: Whether to return human readable values for statistics.
      schema:
        type: boolean
      default: true
      x-global: true
      deprecated: true
      x-version-deprecated: '3.0'
      x-deprecation-message: Use the `format` parameter instead.

    cat.health___query.expand_wildcard:
      in: query
      required: true
      name: expand_wildcard
      description: |-
          Whether to expand wildcard expression to concrete indices that are open, closed, or both.
          For more information, see [cat health API](https://opensearch.org/docs/latest/api-reference/cat/health/).
      schema:
        oneOf:
          - type: string
            const: open
            description: Expand wildcards to open indices only.
          - type: string
            const: closed
            description: Expand wildcards to closed indices only.
          - type: string
            const: master
            description: Expand wildcards for master nodes only.

    search___path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indexes, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams and indexes, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '#/components/schemas/_common___Indices'
      style: simple

    search___query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      required: true
      description: |-
        If true, wildcard and prefix queries are analyzed.
        This parameter can only be used when the q query string parameter is specified.
      schema:
        type: boolean
        default: false
      style: form

    search___query.analyzer:
      in: query
      name: analyzer
      description: |-
        Analyzer to use for the query string.
        This parameter can only be used when the q query string parameter is specified.
      schema:
        type: string
      style: form

    search___query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Comma-separated list of expand wildcard options.
      schema:
        oneOf:
          - $ref: '#/components/schemas/_common___ExpandWildcardsCompact'
          - type: array
            items:
              $ref: '#/components/schemas/_common___ExpandWildcardsCompact'

  requestBodies:

    indices.put_settings:
      required: true
      content:
        application/json:
          schema:
            title: settings
            $ref: '#/components/schemas/indices._common___IndexSettings'

    bulk:
      content:
        application/x-ndjson:
          schema:
            type: array
            items:
              anyOf:
                - type: object
                - type: object
                  properties:
                    index:
                      type: string
                    action:
                      type: string
                      enum: [index, create, delete, update]
                    data:
                      type: object
            description: The operation definition and data (action-data pairs), separated by newlines
      required: true

  responses:

    indices.put_settings___200:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_common___AcknowledgedResponseBase'
  schemas:

    _common___Indices:
      oneOf:
        - $ref: '#/components/schemas/_common___IndexName'
        - $ref: '#/components/schemas/_common___SpecialIndices'
        - type: array
          items:
            $ref: '#/components/schemas/_common___IndexName'

    _common___IndexName:
      type: string

    _common___SpecialIndices:
      oneOf:
        - type: string
          const: _all
        - type: string
          const: _any
        - type: string
          const: _none

    _common___ExpandWildcardsCompact:
      type: string
      enum:
        - open
        - closed
        - none
        - all

    _common___AcknowledgedResponseBase:
      type: object
      properties:
        acknowledged:
          description: For a successful response, this value is always true. On failure, an exception is returned instead.
          type: boolean
      required:
        - acknowledged

    indices._common___IndexSettings:
      type: object
      description: The index settings to be updated.
      properties:
        mode:
          type: string
        routing_path:
          $ref: '#/components/schemas/_common___StringOrStringArray'
        soft_deletes:
          items:
            $ref: '#/components/schemas/indices._common___SoftDeletes'
        soft_deletes.retention_lease.period:
          $ref: '#/components/schemas/_common___Duration'
        routing:
          $ref: '#/components/schemas/indices._common___IndexRouting'
        lifecycle:
          $ref: '#/components/schemas/indices._common___IndexSettingsLifecycle'

    _common___StringOrStringArray:
      oneOf:
        - type: string
        - type: array
          items:
            type: string

    indices._common___SoftDeletes:
      type: object
      properties:
        enabled:
          description: Indicates whether soft deletes are enabled on the index.
          $ref: '#/components/schemas/_common___StringifiedBoolean'
        retention:
          $ref: '#/components/schemas/indices._common___SoftDeletesRetention'
        retention_lease:
          $ref: '#/components/schemas/indices._common___RetentionLease'

    _common___Duration:
      description: |-
        A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
        `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
      pattern: ^(?:(-1)|([0-9\.]+)(?:d|h|m|s|ms|micros|nanos))$
      type: string

    indices._common___IndexRouting:
      type: object
      properties:
        allocation:
          $ref: '#/components/schemas/indices._common___IndexRoutingAllocation'
        rebalance:
          $ref: '#/components/schemas/indices._common___IndexRoutingRebalance'

    _common___StringifiedEpochTimeUnitMillis:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - $ref: '#/components/schemas/_common___EpochTimeUnitMillis'
        - type: string

    _common___EpochTimeUnitMillis:
      allOf:
        - $ref: '#/components/schemas/_common___UnitMillis'

    _common___UnitMillis:
      description: The time unit for milliseconds.
      type: integer
      format: int64

    indices._common___IndexSettingsLifecycle:
      type: object
      properties:
        name:
          type: string
        indexing_complete:
          $ref: '#/components/schemas/_common___StringifiedBoolean'
        origination_date:
          description: |-
            If specified, this is the timestamp used to calculate the index age for its phase transitions. Use this setting
            if you create a new index that contains old data and want to use the original creation date to calculate the index
            age. Specified as a Unix epoch value in milliseconds.
          $ref: '#/components/schemas/_common___StringifiedEpochTimeUnitMillis'
        parse_origination_date:
          description: |-
            Set to `true` to parse the origination date from the index name. This origination date is used to calculate the index age
            for its phase transitions. The index name must match the pattern `^.*-{date_format}-\\d+`, where the `date_format` is
            `yyyy.MM.dd` and the trailing digits are optional. An index that was rolled over would normally match the full format,
            for example `logs-2016.10.31-000002`). If the index name doesn't match the pattern, index creation fails.
          type: boolean
        step:
          $ref: '#/components/schemas/indices._common___IndexSettingsLifecycleStep'
        rollover_alias:
          description: |-
            The index alias to update when the index rolls over. Specify when using a policy that contains a rollover action.
            When the index rolls over, the alias is updated to reflect that the index is no longer the write index. For more
            information about rolling indexes, see Rollover.
          type: string
      required:
        - name

    _common___StringifiedLong:
      oneOf:
        - type: integer
          format: int64
        - type: string

    _common___StringifiedBoolean:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - type: boolean
        - type: string

    _common___StringifiedInteger:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - type: integer
        - type: string

    indices._common___SoftDeletesRetention:
      type: object
      description: The retention settings for soft deletes.
      properties:
        operations:
          $ref: '#/components/schemas/_common___StringifiedLong'

    indices._common___RetentionLease:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/_common___Duration'
      required:
        - period

    indices._common___IndexRoutingAllocation:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/indices._common___IndexRoutingAllocationOptions'
        include:
          $ref: '#/components/schemas/indices._common___IndexRoutingAllocationInclude'
        initial_recovery:
          $ref: '#/components/schemas/indices._common___IndexRoutingAllocationInitialRecovery'
        disk:
          $ref: '#/components/schemas/indices._common___IndexRoutingAllocationDisk'
        total_shards_per_node:
          $ref: '#/components/schemas/_common___StringifiedInteger'

    indices._common___IndexRoutingAllocationDisk:
      type: object
      properties:
        threshold_enabled:
          $ref: '#/components/schemas/_common___StringifiedBoolean'
    indices._common___IndexRoutingAllocationInclude:
      type: object
      properties:
        _tier_preference:
          type: string
        _id:
          type: string
    indices._common___IndexRoutingAllocationInitialRecovery:
      type: object
      properties:
        _id:
          type: string
    indices._common___IndexRoutingAllocationOptions:
      type: string
      enum:
        - all
        - new_primaries
        - none
        - primaries

    indices._common___IndexRoutingRebalance:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/indices._common___IndexRoutingRebalanceOptions'
      required:
        - enable

    indices._common___IndexRoutingRebalanceOptions:
      type: string
      enum:
        - all
        - none
        - primaries
        - replicas

    indices._common___IndexSettingsLifecycleStep:
      type: object
      properties:
        wait_time_threshold:
          $ref: '#/components/schemas/_common___Duration'